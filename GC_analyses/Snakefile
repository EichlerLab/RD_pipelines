import glob

SCRIPT_DIR=config["SCRIPT_DIR"]
CONTIGS=config["CONTIGS"]
WND_SIZE=config["WND_SIZE"]
WND_SLIDE=config["WND_SLIDE"]
CP2LOCI=config["CP2LOCI"]
GC_DTS=config["GC_DTS"]
PREFIX=config["PREFIX"]
INPUT_GENOMES_DIR=config["INPUT_GENOMES_DIR"]

INPUT_GENOMES = [g.split("/")[-1].replace(PREFIX,"") for g in glob.glob("%s/*" % INPUT_GENOMES_DIR)]

rule all:
    input: "combined_output/wssd_GC_cp.dataframe","combined_output/wssd_GC_cp.summary"
    params: sge_opts="-l h_rss=2G -N all"

rule concat_GC_stats:
    input: fn_inputs=["indiv_GC_analysis/wssd-%s"%indiv for indiv in INPUT_GENOMES]
    output: outf="combined_output/wssd_GC_cp.dataframe", F_sum="combined_output/wssd_GC_cp.summary"
    params: sge_opts="-l h_rss=2G -N merge_all"
    run:
        F = open(output.outf,'w')
        Fsum = open(output.F_sum,'w')
        F.write("indiv GC cp2 total frac_cp2 pop\n")
        for f in input.fn_inputs:
            GC2, total = 0, 0 
            indiv=f.split("-")[-1]
            pop=f.split("/")[-1].split("-")[-2]
            for l in open(f):
                F.write("%s %s %s\n"%(indiv, l.rstrip(),pop))
                sl = l.split()
                if float(sl[0])!=0.0:
                    GC2+=int(sl[1])
                    total+=int(sl[2])

            Fsum.write("%s %d %d %f %s\n"%(indiv,GC2,total, float(GC2)/total, pop))
        Fsum.close()
        F.close()

rule indiv_GC_stats:
    input:  "%s/%s{indiv}" % (INPUT_GENOMES_DIR, PREFIX)
    params: sge_opts="-l h_rss=4G -N GC_{indiv}"
    output: "indiv_GC_analysis/wssd-{indiv}"
    shell:  "python {SCRIPT_DIR}/get_gc_cp2_stats.py --out_dir ./indiv_GC_analysis --fn_DTS {input} --contigs {CONTIGS} --wnd_size {WND_SIZE} --wnd_slide {WND_SLIDE} --fn_out wssd --cp2_loci {CP2LOCI} --gc_DTS {GC_DTS}"

rule clean:
    shell: "rm -rf indiv_GC_analysis combined_output ./log; mkdir ./log"
